// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model Character {
  id                   Int                @id @default(autoincrement())
  ocid                 String
  nickname             String             @unique
  worldName            String
  gender               String
  class                String
  classLevel           String
  level                Int
  exp                  BigInt
  expRate              Float
  guildName            String
  imageUrl             String             @db.VarChar(2048)
  dateCreate           DateTime
  accessFlag           Boolean
  liberationQuestClear Boolean
  popularity           Int
  updatedAt            DateTime
  stat                 Stat[]
  hyperStat            HyperStat[]
  propensity           Propensity?
  ability              Ability[]
  itemEquipment        ItemEquipment[]
  cashEquipment        CashEquipment[]
  symbol               Symbol[]
  setEffect            SetEffect[]
  beauty               BeautyEquipment?
  android              AndroidEquipment[]
  pet                  PetEquipment[]
  skill                Skill[]
  linkSkill            LinkSkill[]
  vMatrix              VMatrix[]
  hexaMatrix           HexaMatrix[]
  dojang               Dojang?
}

model Stat {
  id          Int       @id @default(autoincrement())
  characterId Int
  character   Character @relation(fields: [characterId], references: [id])
  statName    String
  statValue   Float?
}

model HyperStat {
  id           Int       @id @default(autoincrement())
  characterId  Int
  character    Character @relation(fields: [characterId], references: [id])
  statType     String
  statLevel    Int?
  statPoint    Int
  statIncrease String?
  preset       Int?
  active       Boolean?
}

model Propensity {
  id               Int       @id @default(autoincrement())
  characterId      Int       @unique
  character        Character @relation(fields: [characterId], references: [id])
  charismaLevel    Int
  sensibilityLevel Int
  insightLevel     Int
  willingnessLevel Int
  handicraftLevel  Int
  charmLevel       Int
}

model Ability {
  id           Int       @id @default(autoincrement())
  characterId  Int
  character    Character @relation(fields: [characterId], references: [id])
  abilityGrade String
  abilityNo    Int?
  abilityValue String?
  presetNo     Int?
  active       Boolean?
}

model ItemEquipment {
  id                        Int        @id @default(autoincrement())
  characterId               Int
  character                 Character   @relation(fields: [characterId], references: [id])
  part                      String
  slot                      String
  name                      String
  icon                      String
  description               String?
  shapeName                 String
  shapeIcon                 String
  gender                    String?
  totalOptionId             Int       @unique
  baseOptionId              Int    @unique
  potentialOptionGrade      String
  additionalPotentialOption String
  potentialOption1          String
  potentialOption2          String
  potentialOption3          String
  additionalPotentialOption1 String
  additionalPotentialOption2 String
  additionalPotentialOption3 String
  equipmentLevelIncrease    Int
  exceptionalOptionId       Int     @unique
  addOptionId               Int      @unique
  growthExp                 Int
  growthLevel               Int
  scrollUpgrade             String
  cuttableCount             String
  goldenHammerFlag          String
  scrollResilienceCount     String
  scrollUpgradeableCount    String
  soulName                  String?
  soulOption                Json?
  etcOptionId               Int     @unique
  starforce                 String
  starforceScrollFlag       String
  starforceOptionId         Int    @unique
  specialRingLevel          Int
  dateExpire                DateTime?
  active                    Boolean

  // Option 관계 설정
  totalOption               ItemOption @relation("TotalOption", fields: [totalOptionId], references: [id])
  baseOption                ItemOption @relation("BaseOption", fields: [baseOptionId], references: [id])
  exceptionalOption         ItemOption @relation("ExceptionalOption", fields: [exceptionalOptionId], references: [id])
  addOption                 ItemOption @relation("AddOption", fields: [addOptionId], references: [id])
  etcOption                 ItemOption @relation("EtcOption", fields: [etcOptionId], references: [id])
  starforceOption           ItemOption @relation("StarforceOption", fields: [starforceOptionId], references: [id])
}

model ItemOption {
  id                     Int       @id @default(autoincrement())
  str                    Int
  dex                    Int
  int                    Int
  luk                    Int
  maxHp                  Int
  maxMp                  Int
  attackPower            Int
  magicPower             Int
  armor                  Int
  speed                  Int
  jump                   Int
  bossDamage             Int
  ignoreMonsterArmor     Int
  allStat                Int
  damage                 Int
  equipmentLevelDecrease Int
  maxHpRate              Int
  maxMpRate              Int
  baseEquipmentLevel     Int
  itemEquipmentsTotal    ItemEquipment[] @relation("TotalOption")
  itemEquipmentsBase     ItemEquipment[] @relation("BaseOption")
  itemEquipmentsExceptional ItemEquipment[] @relation("ExceptionalOption")
  itemEquipmentsAdd      ItemEquipment[] @relation("AddOption")
  itemEquipmentsEtc      ItemEquipment[] @relation("EtcOption")
  itemEquipmentsStarforce ItemEquipment[] @relation("StarforceOption")
}

model CashEquipment {
  id                    Int       @id @default(autoincrement())
  characterId           Int
  character             Character @relation(fields: [characterId], references: [id])
  cashItemEquipmentPart String
  cashItemEquipmentSlot String
  cashItemName          String
  cashItemIcon          String
  cashItemDescription   String?
  cashItemOption        Json
  dateExpire            DateTime?
}

model Symbol {
  id                  Int       @id @default(autoincrement())
  characterId         Int
  character           Character @relation(fields: [characterId], references: [id])
  symbolName          String
  symbolIcon          String
  symbolDescription   String
  symbolForce         Int
  symbolLevel         Int
  symbolStr           Int
  symbolDex           Int
  symbolInt           Int
  symbolLuk           Int
  symbolHp            Int
  symbolGrowthCount   Int
  symbolRequireGrowth Int
}

model SetEffect {
  id            Int       @id @default(autoincrement())
  characterId   Int
  character     Character @relation(fields: [characterId], references: [id])
  setName       String
  totalSetCount Int
  setOption     Json
}

model BeautyEquipment {
  id            Int       @id @default(autoincrement())
  characterId   Int       @unique
  character     Character @relation(fields: [characterId], references: [id])
  hairName      String
  baseColor     String
  mixColor      String
  mixRate       Int
  faceName      String
  faceBaseColor String
  faceMixColor  String
  faceMixRate   Int
  skinName      String
}

model AndroidEquipment {
  id                       Int       @id @default(autoincrement())
  characterId              Int
  character                Character @relation(fields: [characterId], references: [id])
  androidName              String
  androidNickname          String
  androidIcon              String
  androidDescription       String
  androidHair              Json?
  androidFace              Json?
  androidSkinName          String?
  androidCashItemEquipment Json
  androidEarSensorClipFlag String
  androidGender            String
  androidGrade             Int
  androidNonHumanoidFlag   String
  androidShopUsableFlag    String
}

model PetEquipment {
  id                Int       @id @default(autoincrement())
  characterId       Int
  character         Character @relation(fields: [characterId], references: [id])
  petName           String
  petNickname       String
  petIcon           String
  petDescription    String
  petEquipment      Json
  petAutoSkill      Json
  petType           String?
  petSkill          Json
  petDateExpire     DateTime
  petAppearance     String
  petAppearanceIcon String
}

model Skill {
  id               Int       @id @default(autoincrement())
  characterId      Int
  character        Character @relation(fields: [characterId], references: [id])
  skillName        String
  skillDescription String
  skillLevel       Int
  skillEffect      String?
  skillIcon        String
}

model LinkSkill {
  id               Int       @id @default(autoincrement())
  characterId      Int
  character        Character @relation(fields: [characterId], references: [id])
  skillName        String
  skillDescription String
  skillLevel       Int
  skillEffect      String
  skillIcon        String
}

model VMatrix {
  id          Int       @id @default(autoincrement())
  characterId Int
  character   Character @relation(fields: [characterId], references: [id])
  slotId      Int
  slotLevel   Int
  vCoreName   String
  vCoreType   String
  vCoreLevel  Int
  vCoreSkill1 String
  vCoreSkill2 String
  vCoreSkill3 String
}

model HexaMatrix {
  id            Int       @id @default(autoincrement())
  characterId   Int
  character     Character @relation(fields: [characterId], references: [id])
  hexaCoreName  String
  hexaCoreLevel Int
  hexaCoreType  String
  linkedSkill   Json
}

model Dojang {
  id               Int       @id @default(autoincrement())
  characterId      Int       @unique
  character        Character @relation(fields: [characterId], references: [id])
  bestFloor        Int
  dateDojangRecord DateTime
  bestTime         Int
}
